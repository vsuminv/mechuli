server:
  port : 8081

spring:
  security:
    debug: true
  devtools:
    livereload:
      enabled: true
  web:
    resources:
      static-locations: classpath:/static/
#  thymeleaf:
    #    cache: false # 개발 시에는 캐시를 끄는 것이 좋습니다.
#    prefix: classpath:/templates/
#    suffix: .html
  profiles:
    active: local
  config:
    import: optional:file:.env[.properties]

  jpa:
    generated-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
  #      naming:
  #        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  #    properties:
  #      hibernate:
  #        format_sql: true
  #        default_batch_fetch_size: 1000


  sql:
    init:
      mode: always
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  servlet:
    multipart:
      max-file-size: 50MB # 최대 파일 사이즈
      max-request-size: 50MB # 최대 요청 사이즈
    cloud:
      aws:
        credentials:
          access-key: ${AWS_ACCESS_KEY_ID}
          secret-key: ${AWS_SECRET_ACCESS_KEY}
        region:
          static: ap-northeast-2 # 버킷 region
        s3:
          bucket: mechuliproject # 버킷 이름
        stack:
          auto: false


springdoc:
  swagger-ui:
    path: swagger            # Swagger UI 경로 => localhost:8081/demo-ui.html
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # delete - get - patch - post - put 순으로 정렬됨
    api-docs:
      path: /api-docs/json
      groups:
        enabled: true
    cache:
      disabled: true